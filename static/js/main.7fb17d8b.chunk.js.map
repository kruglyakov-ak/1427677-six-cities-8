{"version":3,"sources":["const.ts","types/action.ts","store/action.ts","store/root-reducer.ts","store/user-process/user-process.ts","store/offer-property/offer-property.ts","store/offer-data/offer-data.ts","store/user-process/selectors.ts","components/private-route/private-route.tsx","utils/uttils.ts","services/token.ts","store/api-actions.ts","components/place-card/place-card.tsx","components/offers-list/offers-list.tsx","hooks/useMap.ts","components/map/map.tsx","store/offer-property/selectors.ts","components/city-item/city-item.tsx","components/citys-list/citys-list.tsx","components/main-header/main-header.tsx","components/main-page-empty/main-page-empty.tsx","components/sort-option-item/sort-option-item.tsx","components/sort-options-list/sort-options-list.tsx","store/offer-data/selectors.ts","components/main-page/main-page.tsx","components/login-screen/login-screen.tsx","components/favorite-place-card/favorite-place-card.tsx","components/favorites-offers-list/favorites-offers-list.tsx","components/favorites-screen-empty/favorites-screen-empty.tsx","components/favorites-screen/favorites-screen.tsx","components/main-page-404/main-page-404.tsx","components/loading-screen/loading-screen.tsx","components/property-near-places/property-near-places.tsx","components/property-map/property-map.tsx","components/place-comment/place-comment.tsx","components/comments-list/comments-list.tsx","components/submit-comment-form/submit-comment-form.tsx","components/property-reviews/property-reviews.tsx","components/property-offer/property-offer.tsx","components/property-screen/property-screen.tsx","components/app/app.tsx","services/api.ts","browser-history.ts","store/middleware/redirect.ts","index.tsx"],"names":["MarkerIconUrl","AppRoute","APIRoute","AuthorizationStatus","OfferType","SortType","City","ActionType","offerTypeToReadable","Apartment","Room","House","Hotel","NameSpace","changeCity","createAction","ChangeCity","city","payload","changeSortType","ChangeSortType","type","loadOffers","LoadOffers","offers","loadOfferById","LoadOfferById","offer","loadNearbyOffers","LoadNearbyOffers","nearbyOffers","loadComments","LoadComments","comments","requireAuthorization","RequireAuthorization","authStatus","requireLogout","RequireLogout","getCurrentLogin","GetCurrentLogin","login","redirectToRoute","RedirectToRoute","url","loadFavoriteOffers","LoadFavoriteOffers","favoriteOffers","changeOferFavoriteStatus","ChangeOferFavoriteStatus","changedOffer","initialState","authorizationStatus","Unknown","currentLogin","userProcess","createReducer","builder","addCase","state","action","NoAuth","currentCity","Paris","currentSortType","Popular","offerProperty","offerData","isDataLoaded","map","id","rootReducer","combineReducers","Data","Offer","User","getAuthorizationStatus","PrivateRoute","props","exact","path","render","useSelector","routeProps","Auth","to","Login","getRatingStarsWidth","rating","Math","round","sortOffers","sortType","LowToHighPrice","slice","sort","prev","next","price","HighToLowPrice","TopRated","adaptOffer","bedrooms","cityName","name","cityLatitude","location","latitude","cityLongitude","longitude","cityZoom","zoom","description","goods","hostAvatarUrl","host","avatar_url","hostId","hostIsPro","is_pro","hostName","images","isFavorite","is_favorite","isPremium","is_premium","maxAdults","max_adults","previewImage","preview_image","title","adaptComment","review","comment","date","userAvatarUrl","user","userId","userIsPro","userName","AUTH_TOKEN_KEY_NAME","saveToken","token","localStorage","setItem","changeFavoriteStatus","status","dispatch","_getState","api","a","post","Favorite","data","PlaceCard","onPlaceCardSelect","useDispatch","className","onMouseEnter","onMouseLeave","Main","src","width","height","alt","onClick","xlinkHref","style","OffersList","handleActiveOfferSelect","useMap","mapRef","useState","setMap","useEffect","current","instance","Map","center","lat","lng","layer","TileLayer","attribution","addLayer","setView","defaultCustomIcon","Icon","iconUrl","MarkerDefault","iconSize","iconAnchor","currentCustomIcon","MarkerCurrent","activePlaceCard","currentOffer","useRef","markers","forEach","marker","Marker","push","setIcon","addTo","remove","ref","role","getCurrentCity","getCurrentSortType","CityItem","CitysList","Object","keys","MainHeader","Favorites","delete","Logout","removeItem","MainPageEmpty","SortOptionItem","tabIndex","SortOptionsList","isSortOptionsOpen","values","getOffers","getOffer","getNearbyOffers","getComments","getFavoriteOffers","getLoadedDataStatus","MainPage","offersByCity","filter","setActivePlaceCard","setIsSortOptionsOpen","length","method","LoginScreen","randomCity","min","max","numberSymbolsAfterComma","lower","abs","upper","randomNumber","random","Number","toFixed","getRandomNumberInRange","loginRef","passwordRef","onSubmit","evt","preventDefault","isValidEmail","test","String","value","toLowerCase","isValidPassword","validateForm","email","password","loginAction","toast","info","placeholder","required","FavoritePlaceCard","FavoritesOffersLst","FavoritesScreenEmpty","FavoritesScreen","get","favoriteLocations","Set","add","size","MainPage404","LoadingScreen","PropertyNearPlaces","PropertyMap","PlaceComment","dateTime","dayjs","format","CommentsList","Date","getTime","SubmitCommentForm","commentStarValue","setCommentStarValue","commentTextValue","setCommentTextValue","isDisabledSubmitButton","setIsDisabledSubmitButton","isDisabledFormInputs","setIsDisabledFormInputs","handleRatingInputChange","target","handleFormDisabled","isDisabled","handleFormReset","setDisabledForm","onSucsses","Comments","postComment","htmlFor","onChange","disabled","checked","PropertyReviews","PropertyOffer","image","good","PropertyScreen","useParams","Hotels","fetchOfferByIdAction","fetchNearbyOffers","fetchComments","App","HttpCode","isCheckedAuth","browserHistory","createBrowserHistory","redirect","_store","onUnauthorized","axios","create","baseURL","timeout","interceptors","response","use","error","Unauthorized","Promise","reject","request","config","getItem","getToken","headers","createAPI","store","configureStore","reducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","ReactDOM","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.7fb17d8b.chunk.js","sourcesContent":["const MIN_COUNT_OFFER_IMAGES = 0;\nconst MAX_COUNT_OFFER_IMAGES = 6;\nconst MIN_COMMENT_CHARACTERS = 50;\nconst MAX_COMMENT_CHARACTERS = 300;\nconst MIN_COUNT_COMMENTS = 0;\nconst MAX_COUNT_COMMENTS = 10;\n\nconst enum MarkerIconUrl {\n  MarkerDefault = 'img/pin.svg',\n  MarkerCurrent = 'img/pin-active.svg',\n}\n\nconst enum AppRoute {\n  Main = '/',\n  Login = '/login',\n  Favorites = '/favorites',\n  Offer = '/offer/:id',\n}\n\nconst enum APIRoute {\n  Hotels = '/hotels',\n  Login = '/login',\n  Logout = '/logout',\n  Comments = '/comments',\n  Favorite = '/favorite',\n}\n\n\nconst enum AuthorizationStatus {\n  Auth = 'AUTH',\n  NoAuth = 'NO_AUTH',\n  Unknown = 'UNKNOWN',\n}\n\nconst enum OfferType {\n  Apartment = 'apartment',\n  Room = 'room',\n  House = 'house',\n  Hotel = 'hotel',\n}\n\nenum SortType {\n  Popular = 'Popular',\n  LowToHighPrice = 'Price: low to high',\n  HighToLowPrice = 'Price: high to low',\n  TopRated = 'Top rated first',\n}\n\nenum City {\n  Paris = 'Paris',\n  Cologne = 'Cologne',\n  Brussels = 'Brussels',\n  Amsterdam = 'Amsterdam',\n  Hamburg = 'Hamburg',\n  Dusseldorf = 'Dusseldorf',\n}\n\nconst offerTypeToReadable = {\n  [OfferType.Apartment]: 'Apartment',\n  [OfferType.Room]: 'Private Room',\n  [OfferType.House]: 'House',\n  [OfferType.Hotel]: 'Hotel',\n};\n\nexport {\n  MIN_COUNT_OFFER_IMAGES,\n  MAX_COUNT_OFFER_IMAGES,\n  MIN_COMMENT_CHARACTERS,\n  MAX_COMMENT_CHARACTERS,\n  MIN_COUNT_COMMENTS,\n  MAX_COUNT_COMMENTS,\n  OfferType,\n  AppRoute,\n  AuthorizationStatus,\n  offerTypeToReadable,\n  City,\n  MarkerIconUrl,\n  SortType,\n  APIRoute\n};\n","import { Action } from 'redux';\nimport { AxiosInstance } from 'axios';\nimport { ThunkAction } from 'redux-thunk';\nimport { State } from './state';\n\nenum ActionType {\n  ChangeCity = 'offer/changeCity',\n  ChangeSortType = 'offer/changeSortType',\n  RequireAuthorization = 'user/requireAuthorization',\n  RequireLogout = 'user/requireLogout',\n  GetCurrentLogin = 'user/getCurrentLogin',\n  LoadOffers = 'data/loadOffers',\n  LoadOfferById = 'data/loadOfferById',\n  RedirectToRoute = 'offer/redirectToRoute',\n  LoadNearbyOffers = 'data/loadNearbyOffers',\n  LoadComments = 'data/loadComments',\n  LoadFavoriteOffers = 'data/loadFavoriteOffers',\n  ChangeOferFavoriteStatus = 'data/changeOferFavoriteStatus'\n}\n\ntype ThunkActionResult<R = Promise<void>> = ThunkAction<R, State, AxiosInstance, Action>;\n\nexport {\n  ActionType\n};\n\nexport type {\n  ThunkActionResult\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport { AuthorizationStatus, SortType } from '../const';\nimport { ActionType } from '../types/action';\nimport { Offer } from '../types/offer';\nimport { Review } from '../types/review';\n\nconst changeCity = createAction(\n  ActionType.ChangeCity,\n  (city: string) => ({\n    payload: city,\n  }),\n);\n\nconst changeSortType = createAction(\n  ActionType.ChangeSortType,\n  (type: SortType) => ({\n    payload: type,\n  }),\n);\n\nconst loadOffers = createAction(\n  ActionType.LoadOffers,\n  (offers: Offer[]) => ({\n    payload: {\n      offers,\n    },\n  }),\n);\n\nconst loadOfferById = createAction(\n  ActionType.LoadOfferById,\n  (offer: Offer) => ({\n    payload: {\n      offer,\n    },\n  }),\n);\n\nconst loadNearbyOffers = createAction(\n  ActionType.LoadNearbyOffers,\n  (nearbyOffers: Offer[]) => ({\n    payload: {\n      nearbyOffers,\n    },\n  }),\n);\n\nconst loadComments = createAction(\n  ActionType.LoadComments,\n  (comments: Review[]) => ({\n    payload: {\n      comments,\n    },\n  }),\n);\n\nconst requireAuthorization = createAction(\n  ActionType.RequireAuthorization,\n  (authStatus: AuthorizationStatus) => ({\n    payload: authStatus,\n  }),\n);\n\nconst requireLogout = createAction(\n  ActionType.RequireLogout,\n);\n\nconst getCurrentLogin = createAction(\n  ActionType.GetCurrentLogin,\n  (login: string | undefined) => ({\n    payload: login,\n  }),\n);\n\nconst redirectToRoute = createAction(\n  ActionType.RedirectToRoute,\n  (url: string) => ({\n    payload: url,\n  }),\n);\n\nconst loadFavoriteOffers = createAction(\n  ActionType.LoadFavoriteOffers,\n  (favoriteOffers: Offer[]) => ({\n    payload: {\n      favoriteOffers,\n    },\n  }),\n);\n\nconst changeOferFavoriteStatus = createAction(\n  ActionType.ChangeOferFavoriteStatus,\n  (changedOffer: Offer) => ({\n    payload: {\n      changedOffer,\n    },\n  }),\n);\n\nexport {\n  changeCity,\n  changeSortType,\n  loadOffers,\n  requireAuthorization,\n  requireLogout,\n  getCurrentLogin,\n  loadOfferById,\n  redirectToRoute,\n  loadNearbyOffers,\n  loadComments,\n  loadFavoriteOffers,\n  changeOferFavoriteStatus\n};\n","import { combineReducers } from 'redux';\nimport { userProcess } from './user-process/user-process';\nimport { offerProperty } from './offer-property/offer-property';\nimport { offerData } from './offer-data/offer-data';\n\nenum NameSpace {\n  Data = 'DATA',\n  Offer = 'OFFER',\n  User = 'USER',\n}\n\nconst rootReducer = combineReducers({\n  [NameSpace.Data]: offerData,\n  [NameSpace.Offer]: offerProperty,\n  [NameSpace.User]: userProcess,\n});\n\ntype RootState = ReturnType<typeof rootReducer>;\n\nexport { NameSpace, rootReducer };\nexport type { RootState };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { AuthorizationStatus } from '../../const';\nimport { UserProcess } from '../../types/state';\nimport { requireAuthorization, requireLogout, getCurrentLogin } from '../action';\n\nconst initialState: UserProcess = {\n  authorizationStatus: AuthorizationStatus.Unknown,\n  currentLogin: '',\n};\n\nconst userProcess = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(requireLogout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NoAuth;\n    })\n    .addCase(getCurrentLogin, (state, action) => {\n      state.currentLogin = action.payload;\n    });\n});\n\nexport { userProcess };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { City, SortType } from '../../const';\nimport { OfferProperty } from '../../types/state';\nimport { changeCity, changeSortType } from '../action';\n\nconst initialState: OfferProperty = {\n  currentCity: City.Paris,\n  currentSortType: SortType.Popular,\n};\n\nconst offerProperty = createReducer(initialState, (builder) => {\n  builder\n    .addCase(changeCity, (state, action) => {\n      state.currentCity = action.payload;\n    })\n    .addCase(changeSortType, (state, action) => {\n      state.currentSortType = action.payload;\n    });\n});\n\nexport { offerProperty };\n","import { createReducer } from '@reduxjs/toolkit';\nimport { OfferData } from '../../types/state';\nimport {\n  changeOferFavoriteStatus,\n  loadComments,\n  loadFavoriteOffers,\n  loadNearbyOffers,\n  loadOfferById,\n  loadOffers\n} from '../action';\n\nconst initialState: OfferData = {\n  offers: [],\n  isDataLoaded: false,\n  offer: null,\n  nearbyOffers: [],\n  comments: [],\n  favoriteOffers: [],\n};\n\nconst offerData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadOffers, (state, action) => {\n      const { offers } = action.payload;\n      state.offers = offers;\n      state.isDataLoaded = true;\n    })\n    .addCase(loadOfferById, (state, action) => {\n      const { offer } = action.payload;\n      state.offer = offer;\n    })\n    .addCase(loadNearbyOffers, (state, action) => {\n      const { nearbyOffers } = action.payload;\n      state.nearbyOffers = nearbyOffers;\n    })\n    .addCase(loadComments, (state, action) => {\n      const { comments } = action.payload;\n      state.comments = comments;\n    })\n    .addCase(loadFavoriteOffers, (state, action) => {\n      const { favoriteOffers } = action.payload;\n      state.favoriteOffers = favoriteOffers;\n    })\n    .addCase(changeOferFavoriteStatus, (state, action) => {\n      const { changedOffer } = action.payload;\n      state.offers = state.offers.map((offer) => offer.id === changedOffer.id ? changedOffer : offer);\n      state.favoriteOffers = state.favoriteOffers.map((offer) => offer.id === changedOffer.id ? changedOffer : offer);\n      state.offer = changedOffer;\n    });\n});\n\nexport { offerData };\n","import { AuthorizationStatus } from '../../const';\nimport { State } from '../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nconst getAuthorizationStatus = (state: State): AuthorizationStatus => state[NameSpace.User].authorizationStatus;\nconst getCurrentLogin = (state: State): string | undefined => state[NameSpace.User].currentLogin;\n\nexport {\n  getAuthorizationStatus,\n  getCurrentLogin\n};\n","import { History } from 'history';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { RouteProps } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\n\ntype RenderFuncProps = {\n  history: History<unknown>;\n}\n\ntype PrivateRouteProps = RouteProps & {\n  render: (props: RenderFuncProps) => JSX.Element;\n}\n\nfunction PrivateRoute(props: PrivateRouteProps): JSX.Element {\n  const { exact, path, render } = props;\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.Auth\n          ? render(routeProps)\n          : <Redirect to={AppRoute.Login} />\n      )}\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import { AuthorizationStatus, SortType } from '../const';\nimport { DataComment } from '../types/data-comment';\nimport { DataOffer } from '../types/data-offer';\nimport { Offer } from '../types/offer';\nimport { Review } from '../types/review';\n\nconst getRatingStarsWidth = (rating: number): number => (20 * Math.round(rating));\n\nconst getRandomNumberInRange = (min = 0, max = 1, numberSymbolsAfterComma = 0): number => {\n  const lower = Math.min(Math.abs(min), Math.abs(max));\n  const upper = Math.max(Math.abs(min), Math.abs(max));\n  const randomNumber = Math.random() * (upper - lower) + lower;\n  return Number(randomNumber.toFixed(numberSymbolsAfterComma));\n};\n\nconst sortOffers = (sortType: SortType, offers: Offer[]): Offer[] => {\n  switch (sortType) {\n    case SortType.LowToHighPrice: {\n      return offers.slice().sort((prev, next) => prev.price - next.price);\n    }\n    case SortType.HighToLowPrice: {\n      return offers.slice().sort((prev, next) => next.price - prev.price);\n    }\n    case SortType.TopRated: {\n      return offers.slice().sort((prev, next) => next.rating - prev.rating);\n    }\n    default: {\n      return offers;\n    }\n  }\n};\n\nconst isCheckedAuth = (authorizationStatus: AuthorizationStatus): boolean =>\n  authorizationStatus === AuthorizationStatus.Unknown;\n\nconst adaptOffer = (offer: DataOffer): Offer => {\n  const adaptedOffer = {\n    bedrooms: offer.bedrooms,\n    cityName: offer.city.name,\n    cityLatitude: offer.city.location.latitude,\n    cityLongitude: offer.city.location.longitude,\n    cityZoom: offer.city.location.zoom,\n    latitude: offer.location.latitude,\n    longitude: offer.location.longitude,\n    zoom: offer.location.zoom,\n    description: offer.description,\n    goods: offer.goods,\n    hostAvatarUrl: offer.host.avatar_url,\n    hostId: offer.host.id,\n    hostIsPro: offer.host.is_pro,\n    hostName: offer.host.name,\n    id: offer.id,\n    images: offer.images,\n    isFavorite: offer.is_favorite,\n    isPremium: offer.is_premium,\n    maxAdults: offer.max_adults,\n    previewImage: offer.preview_image,\n    price: offer.price,\n    rating: offer.rating,\n    title: offer.title,\n    type: offer.type,\n  };\n\n  return adaptedOffer;\n};\n\nconst adaptComment = (review: DataComment): Review => {\n  const adaptedComment = {\n    comment: review.comment,\n    date: review.date,\n    id: review.id,\n    rating: review.rating,\n    userAvatarUrl: review.user.avatar_url,\n    userId: review.user.id,\n    userIsPro: review.user.is_pro,\n    userName: review.user.name,\n  };\n\n  return adaptedComment;\n};\n\nexport {\n  getRatingStarsWidth,\n  getRandomNumberInRange,\n  isCheckedAuth,\n  adaptOffer,\n  adaptComment,\n  sortOffers\n};\n\n","\nconst AUTH_TOKEN_KEY_NAME = 'six-citys-token';\n\ntype Token = string;\n\nconst getToken = (): Token => {\n  const token = localStorage.getItem(AUTH_TOKEN_KEY_NAME);\n  return token ?? '';\n};\n\nconst saveToken = (token: Token): void => {\n  localStorage.setItem(AUTH_TOKEN_KEY_NAME, token);\n};\n\nconst dropToken = (): void => {\n  localStorage.removeItem(AUTH_TOKEN_KEY_NAME);\n};\n\nexport type { Token };\nexport {\n  getToken,\n  saveToken,\n  dropToken\n};\n","import { APIRoute, AppRoute, AuthorizationStatus } from '../const';\nimport { dropToken, saveToken, Token } from '../services/token';\nimport { ThunkActionResult } from '../types/action';\nimport { AuthData } from '../types/auth-data';\nimport { CommentPost } from '../types/comment-post';\nimport { DataComment } from '../types/data-comment';\nimport { DataOffer } from '../types/data-offer';\nimport { adaptComment, adaptOffer } from '../utils/uttils';\nimport { toast } from 'react-toastify';\nimport {\n  changeOferFavoriteStatus,\n  getCurrentLogin,\n  loadComments,\n  loadFavoriteOffers,\n  loadNearbyOffers,\n  loadOfferById,\n  loadOffers,\n  redirectToRoute,\n  requireAuthorization,\n  requireLogout\n} from './action';\n\nconst fetchOffersAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const { data } = await api.get<DataOffer[]>(APIRoute.Hotels);\n    dispatch(loadOffers(data.map((offer) => adaptOffer(offer))));\n  };\n\nconst fetchOfferByIdAction = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const { data } = await api.get<DataOffer>(`${APIRoute.Hotels}/${id}`);\n    dispatch(loadOfferById(adaptOffer(data)));\n  };\n\nconst fetchNearbyOffers = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const { data } = await api.get<DataOffer[]>(`${APIRoute.Hotels}/${id}/nearby`);\n    dispatch(loadNearbyOffers(data.map((offer) => adaptOffer(offer))));\n  };\n\nconst fetchComments = (id: number): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const { data } = await api.get<DataComment[]>(`${APIRoute.Comments}/${id}`);\n    dispatch(loadComments(data.map((comment) => adaptComment(comment))));\n  };\n\nconst postComment = (\n  id: number,\n  { comment, rating }: CommentPost,\n  setDisabledForm: (isDisabled: boolean) => void,\n  onSucsses: () => void,\n): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    try {\n      const { data } = await api.post<DataComment[]>(`${APIRoute.Comments}/${id}`, { comment, rating });\n      await dispatch(loadComments(data.map((review) => adaptComment(review))));\n      onSucsses();\n      setDisabledForm(false);\n    } catch (error) {\n      toast.info(`${error}`);\n      setDisabledForm(false);\n    }\n  };\n\nconst fetchFavorite = (): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const { data } = await api.get<DataOffer[]>(APIRoute.Favorite);\n    dispatch(loadFavoriteOffers(data.map((offer) => adaptOffer(offer))));\n  };\n\nconst changeFavoriteStatus = (id: number, status: boolean): ThunkActionResult =>\n  async (dispatch, _getState, api): Promise<void> => {\n    const { data } = await api.post<DataOffer>(`${APIRoute.Favorite}/${id}/${+status}`);\n    dispatch(changeOferFavoriteStatus(adaptOffer(data)));\n  };\n\nconst checkAuthAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const { data: { email } } = await api.get(APIRoute.Login);\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    dispatch(getCurrentLogin(email));\n  };\n\nconst loginAction = ({ login: email, password }: AuthData): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    const { data: { token } } = await api.post<{ token: Token }>(APIRoute.Login, { email, password });\n    saveToken(token);\n    dispatch(requireAuthorization(AuthorizationStatus.Auth));\n    dispatch(redirectToRoute(AppRoute.Main));\n  };\n\nconst logoutAction = (): ThunkActionResult =>\n  async (dispatch, _getState, api) => {\n    api.delete(APIRoute.Logout);\n    dropToken();\n    dispatch(requireLogout());\n  };\n\n\nexport {\n  fetchOffersAction,\n  checkAuthAction,\n  loginAction,\n  logoutAction,\n  fetchOfferByIdAction,\n  fetchNearbyOffers,\n  fetchComments,\n  postComment,\n  fetchFavorite,\n  changeFavoriteStatus\n};\n","import { Offer } from '../../types/offer';\nimport { Link } from 'react-router-dom';\nimport { getRatingStarsWidth } from '../../utils/uttils';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeFavoriteStatus } from '../../store/api-actions';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport { redirectToRoute } from '../../store/action';\n\ntype PlaceCardProps = {\n  offer: Offer,\n  onPlaceCardSelect?: (offer: Offer | null) => void,\n}\nfunction PlaceCard({ offer, onPlaceCardSelect }: PlaceCardProps): JSX.Element {\n  const dispatch = useDispatch();\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  const {\n    isPremium,\n    previewImage,\n    price,\n    isFavorite,\n    rating,\n    title,\n    type,\n    id,\n  } = offer;\n\n  const handleFavoriteClick = () => {\n    if (authorizationStatus === AuthorizationStatus.NoAuth) {\n      dispatch(redirectToRoute(AppRoute.Login));\n    }\n    dispatch(changeFavoriteStatus(id, !isFavorite));\n  };\n\n  const handleCardSelect = () => {\n    if (onPlaceCardSelect) {\n      onPlaceCardSelect(offer);\n    }\n  };\n  const handleCardUnselect = () => {\n    if (onPlaceCardSelect) {\n      onPlaceCardSelect(null);\n    }\n  };\n\n  return (\n    <article className=\"cities__place-card place-card\"\n      onMouseEnter={handleCardSelect}\n      onMouseLeave={handleCardUnselect}\n    >\n      {isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>}\n      <div className=\"cities__image-wrapper place-card__image-wrapper\">\n        <Link to={`${AppRoute.Main}offer/${id}`} >\n          <img className=\"place-card__image\" src={previewImage} width=\"260\" height=\"200\" alt=\"Place card\" />\n        </Link>\n      </div>\n      <div className=\"place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            className={\n              isFavorite && authorizationStatus === AuthorizationStatus.Auth\n                ? 'place-card__bookmark-button place-card__bookmark-button--active button'\n                : 'place-card__bookmark-button  button'\n            }\n            type=\"button\"\n            onClick={handleFavoriteClick}\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">To bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: `${getRatingStarsWidth(rating)}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.Main}offer/${id}`} >{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default PlaceCard;\n","import PlaceCard from '../place-card/place-card';\nimport { Offer } from '../../types/offer';\n\ntype OffersListProps = {\n  offers: Offer[],\n  handleActiveOfferSelect?: (offer: Offer | null) => void,\n}\n\nfunction OffersList({ offers, handleActiveOfferSelect }: OffersListProps): JSX.Element {\n  return (\n    <>\n      {offers.map((offer) => (\n        <PlaceCard\n          offer={offer}\n          key={offer.id}\n          onPlaceCardSelect={handleActiveOfferSelect}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default OffersList;\n","import { useEffect, useState } from 'react';\nimport { Map, TileLayer } from 'leaflet';\nimport { Offer } from '../types/offer';\n\nfunction useMap(\n  mapRef: React.MutableRefObject<HTMLElement | null>,\n  offer: Offer | null,\n): Map | null {\n  const [map, setMap] = useState<Map | null>(null);\n\n  useEffect(() => {\n    if (mapRef.current !== null && map === null && offer) {\n      const instance = new Map(mapRef.current, {\n        center: {\n          lat: offer.cityLatitude,\n          lng: offer.cityLongitude,\n        },\n        zoom: offer.cityZoom,\n      });\n\n      const layer = new TileLayer(\n        'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png',\n        {\n          attribution:\n            '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n        },\n      );\n\n      instance.addLayer(layer);\n\n      setMap(instance);\n    }\n  }, [mapRef, map, offer]);\n\n  useEffect(() => {\n    if (offer) {\n      map?.setView({\n        lat: offer.cityLatitude,\n        lng: offer.cityLongitude,\n      });\n    }\n  }, [map, offer]);\n\n  return map;\n}\n\nexport default useMap;\n","import {Icon, Marker} from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { useEffect, useRef } from 'react';\nimport { MarkerIconUrl } from '../../const';\nimport useMap from '../../hooks/useMap';\nimport { Offer } from '../../types/offer';\n\ntype MapProps = {\n  offers: Offer[],\n  activePlaceCard: Offer | null;\n  currentOffer?: Offer | null;\n};\n\nconst defaultCustomIcon = new Icon({\n  iconUrl: MarkerIconUrl.MarkerDefault,\n  iconSize: [27, 39],\n  iconAnchor: [13.5, 39],\n});\n\nconst currentCustomIcon = new Icon({\n  iconUrl: MarkerIconUrl.MarkerCurrent,\n  iconSize: [27, 39],\n  iconAnchor: [13.5, 39],\n});\n\nfunction Map(props: MapProps): JSX.Element {\n  const { activePlaceCard, offers, currentOffer } = props;\n  const mapRef = useRef(null);\n  const map = useMap(mapRef, offers[0]);\n\n  useEffect(() => {\n    const markers: Marker[] = [];\n\n    if (map && offers) {\n      offers.forEach((offer) => {\n        const marker = new Marker({\n          lat: offer.latitude,\n          lng: offer.longitude,\n        });\n        markers.push(marker);\n        marker\n          .setIcon(\n            activePlaceCard !== null && offer.id === activePlaceCard.id\n              ? currentCustomIcon\n              : defaultCustomIcon,\n          )\n          .addTo(map);\n      });\n    }\n    if (map && currentOffer) {\n      const marker = new Marker({\n        lat: currentOffer.latitude,\n        lng: currentOffer.longitude,\n      });\n      markers.push(marker);\n      marker\n        .setIcon(currentCustomIcon)\n        .addTo(map);\n    }\n    return () => markers.forEach((marker) => marker.remove());\n  }, [map, offers, activePlaceCard, currentOffer]);\n\n  return <div style={{height: '100%'}} ref={mapRef} role=\"dialog\"></div>;\n}\n\nexport default Map;\n","import { SortType } from '../../const';\nimport { State } from '../../types/state';\nimport { NameSpace } from '../root-reducer';\n\nconst getCurrentCity = (state: State): string => state[NameSpace.Offer].currentCity;\nconst getCurrentSortType = (state: State): SortType => state[NameSpace.Offer].currentSortType;\n\nexport {\n  getCurrentCity,\n  getCurrentSortType\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { changeCity } from '../../store/action';\nimport { getCurrentCity } from '../../store/offer-property/selectors';\n\ntype CityItemProps = {\n  city: string;\n}\n\nfunction CityItem({ city }: CityItemProps): JSX.Element {\n  const currentCity = useSelector(getCurrentCity);\n  const dispatch = useDispatch();\n\n  const handleCityClick = () => {\n    dispatch(changeCity(city));\n  };\n\n  return (\n    <li className=\"locations__item\">\n      <Link\n        className={city === currentCity ?\n          'locations__item-link tabs__item--active' :\n          'locations__item-link tabs__item'} to={AppRoute.Main}\n        onClick={handleCityClick}\n      >\n        <span>{city}</span>\n      </Link>\n    </li >\n  );\n}\n\nexport default CityItem;\n\n\n","import { City } from '../../const';\nimport CityItem from '../city-item/city-item';\n\nfunction CitysList(): JSX.Element {\n  return (\n    <section className=\"locations container\">\n      <ul className=\"locations__list tabs__list\">\n        {Object.keys(City).map((city) => (\n          <CityItem\n            city={city}\n            key={city}\n          />))}\n      </ul>\n    </section>\n  );\n}\n\nexport default (CitysList);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { logoutAction } from '../../store/api-actions';\nimport { getAuthorizationStatus, getCurrentLogin } from '../../store/user-process/selectors';\n\nfunction MainHeader(): JSX.Element {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const currentLogin = useSelector(getCurrentLogin);\n  const dispatch = useDispatch();\n  const onLogout = () => {\n    dispatch(logoutAction());\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to={AppRoute.Main}>\n              <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n            </Link>\n          </div>\n          <nav className=\"header__nav\">\n            <ul className=\"header__nav-list\">\n              {authorizationStatus === AuthorizationStatus.Auth ?\n                <>\n                  <li className=\"header__nav-item user\">\n                    <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.Favorites}>\n                      <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n                      </div>\n                      <span className=\"header__user-name user__name\">{currentLogin}</span>\n                    </Link>\n                  </li>\n                  <li className=\"header__nav-item\">\n                    <Link className=\"header__nav-link\" to={AppRoute.Login}>\n                      <span className=\"header__signout\" onClick={onLogout}>Sign out</span>\n                    </Link>\n                  </li>\n                </>\n                :\n                <li className=\"header__nav-item user\">\n                  <Link className=\"header__nav-link\" to={AppRoute.Login}>\n                    <span className=\"header__signout\">Sign in</span>\n                  </Link>\n                </li>}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default MainHeader;\n","import { useSelector } from 'react-redux';\nimport { getCurrentCity } from '../../store/offer-property/selectors';\nimport CitysList from '../citys-list/citys-list';\nimport MainHeader from '../main-header/main-header';\n\nfunction MainPageEmpty(): JSX.Element {\n  const currentCity = useSelector(getCurrentCity);\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <MainHeader />\n\n      <main className=\"page__main page__main--index page__main--index-empty\">\n        <h1 className=\"visually-hidden\">Cities</h1>\n        <div className=\"tabs\">\n          <CitysList />\n        </div>\n        <div className=\"cities\">\n          <div className=\"cities__places-container cities__places-container--empty container\">\n            <section className=\"cities__no-places\">\n              <div className=\"cities__status-wrapper tabs__content\">\n                <b className=\"cities__status\">No places to stay available</b>\n                <p className=\"cities__status-description\">We could not find any property available at the moment in {currentCity}</p>\n              </div>\n            </section>\n            <div className=\"cities__right-section\"></div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default MainPageEmpty;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { SortType } from '../../const';\nimport { changeSortType } from '../../store/action';\nimport { getCurrentSortType } from '../../store/offer-property/selectors';\n\ntype SortOptionItemProps = {\n  sortType: SortType,\n}\n\nfunction SortOptionItem({ sortType }: SortOptionItemProps): JSX.Element {\n  const currentSortType = useSelector(getCurrentSortType);\n  const dispatch = useDispatch();\n\n  const handleOptionClick = () => {\n    dispatch(changeSortType(sortType));\n  };\n\n  return (\n    <li className={currentSortType === sortType ?\n      'places__option places__option--active' :\n      'places__option'}\n    tabIndex={0}\n    onClick={handleOptionClick}\n    >\n      {sortType}\n    </li>\n  );\n}\n\nexport default SortOptionItem;\n","import SortOptionItem from '../sort-option-item/sort-option-item';\nimport { SortType } from '../../const';\n\ntype SortOptionsListProps = {\n  isSortOptionsOpen: boolean,\n}\n\nfunction SortOptionsList({ isSortOptionsOpen }: SortOptionsListProps): JSX.Element {\n  return (\n    <ul className={isSortOptionsOpen ?\n      'places__options places__options--custom places__options--opened' :\n      'places__options places__options--custom'}\n    >\n      {Object.values(SortType).map((sortType) => (\n        <SortOptionItem\n          sortType={sortType}\n          key={sortType}\n        />))}\n    </ul>\n  );\n}\n\nexport default SortOptionsList;\n","import { Offer } from '../../types/offer';\nimport { Review } from '../../types/review';\nimport { State } from '../../types/state';\nimport {NameSpace} from '../root-reducer';\n\nconst getOffers = (state: State): Offer[] => state[NameSpace.Data].offers;\nconst getOffer = (state: State): Offer | null => state[NameSpace.Data].offer;\nconst getNearbyOffers= (state: State): Offer[] => state[NameSpace.Data].nearbyOffers;\nconst getComments = (state: State): Review[] => state[NameSpace.Data].comments;\nconst getFavoriteOffers = (state: State): Offer[] => state[NameSpace.Data].favoriteOffers;\nconst getLoadedDataStatus = (state: State): boolean => state[NameSpace.Data].isDataLoaded;\n\nexport {\n  getOffers,\n  getOffer,\n  getNearbyOffers,\n  getComments,\n  getFavoriteOffers,\n  getLoadedDataStatus\n};\n","import OffersList from '../offers-list/offers-list';\nimport { Offer } from '../../types/offer';\nimport Map from '../map/map';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport CitysList from '../citys-list/citys-list';\nimport MainPageEmpty from '../main-page-empty/main-page-empty';\nimport SortOptionsList from '../sort-options-list/sort-options-list';\nimport MainHeader from '../main-header/main-header';\nimport { sortOffers } from '../../utils/uttils';\nimport { getCurrentCity, getCurrentSortType } from '../../store/offer-property/selectors';\nimport { getOffers } from '../../store/offer-data/selectors';\n\nfunction MainPage(): JSX.Element {\n  const currentCity = useSelector(getCurrentCity);\n  const offers = useSelector(getOffers);\n  const currentSortType = useSelector(getCurrentSortType);\n\n  const offersByCity = offers.filter((offer) => offer.cityName === currentCity);\n\n  const [activePlaceCard, setActivePlaceCard] = useState<Offer | null>(null);\n  const [isSortOptionsOpen, setIsSortOptionsOpen] = useState<boolean>(false);\n\n  const handleActiveOfferSelect = (offer: Offer | null): void => {\n    setActivePlaceCard(offer);\n  };\n\n  const handleSortOptionOpen = (): void => {\n    setIsSortOptionsOpen(!isSortOptionsOpen);\n  };\n\n  useEffect(() => setIsSortOptionsOpen(false), [currentSortType, currentCity]);\n\n  if (offersByCity.length === 0) {\n    return <MainPageEmpty />;\n  }\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <MainHeader />\n      <main className=\"page__main page__main--index\">\n        <h1 className=\"visually-hidden\">Cities</h1>\n        <div className=\"tabs\">\n          <CitysList />\n        </div>\n        <div className=\"cities\">\n          <div className=\"cities__places-container container\">\n            <section className=\"cities__places places\">\n              <h2 className=\"visually-hidden\">Places</h2>\n              <b className=\"places__found\">{offersByCity.length} places to stay in {currentCity}</b>\n              <form className=\"places__sorting\" action=\"#\" method=\"get\">\n                <span className=\"places__sorting-caption\">Sort by </span>\n                <span className=\"places__sorting-type\" tabIndex={0} onClick={handleSortOptionOpen}>\n                  {currentSortType}\n                  <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n                    <use xlinkHref=\"#icon-arrow-select\"></use>\n                  </svg>\n                </span>\n                <SortOptionsList\n                  isSortOptionsOpen={isSortOptionsOpen}\n                />\n              </form>\n              <div className=\"cities__places-list places__list tabs__content\">\n                <OffersList offers={sortOffers(currentSortType, offersByCity)} handleActiveOfferSelect={handleActiveOfferSelect} />\n              </div>\n            </section>\n            <div className=\"cities__right-section\">\n              <section className=\"cities__map map\">\n                <Map offers={offersByCity} activePlaceCard={activePlaceCard} />\n              </section>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default MainPage;\n","import { FormEvent, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { AppRoute, City } from '../../const';\nimport { changeCity, getCurrentLogin } from '../../store/action';\nimport { loginAction } from '../../store/api-actions';\nimport { getRandomNumberInRange } from '../../utils/uttils';\nimport { toast } from 'react-toastify';\n\nconst VALIDATION_FAIL_MESSAGE = 'Please enter your email address and password. The password must be at least 1 letter(a-z) and 1 number(0-9).';\n\nfunction LoginScreen(): JSX.Element {\n  const dispatch = useDispatch();\n  const getRandomCity = () => Object.keys(City)[getRandomNumberInRange(0, Object.keys(City).length - 1)];\n  const randomCity = getRandomCity();\n\n  const handleCityClick = () => {\n    dispatch(changeCity(randomCity));\n  };\n\n  const loginRef = useRef<HTMLInputElement | null>(null);\n  const passwordRef = useRef<HTMLInputElement | null>(null);\n\n  const validateForm = () => {\n    const emailPattern = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n    const passwordPattern = /[0-9]+[a-z]+|[a-z]+[0-9]+/;\n\n    if (loginRef.current !== null && passwordRef.current !== null) {\n      const isValidEmail = emailPattern.test(String(loginRef.current.value).toLowerCase());\n      const isValidPassword = passwordPattern.test(String(passwordRef.current.value).toLowerCase());\n\n      return isValidEmail && isValidPassword;\n    }\n\n    return false;\n  };\n\n\n  const handleSubmit = (evt: FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const isValidForm = validateForm();\n    if (isValidForm && loginRef.current !== null && passwordRef.current !== null) {\n      dispatch(getCurrentLogin(loginRef.current.value));\n      dispatch(loginAction({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      }));\n      return;\n    }\n\n    toast.info(VALIDATION_FAIL_MESSAGE);\n  };\n\n  return (\n    <div className=\"page page--gray page--login\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link\" to={AppRoute.Main}>\n                <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n              </Link>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form\n              className=\"login__form form\"\n              action=\"#\" method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  ref={loginRef}\n                  className=\"login__input form__input\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n              </div>\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input\n                  ref={passwordRef}\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  required\n                />\n              </div>\n              <button\n                className=\"login__submit form__submit button\"\n                type=\"submit\"\n              >\n                Sign in\n              </button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <Link className=\"locations__item-link\" to={AppRoute.Main} onClick={handleCityClick}>\n                <span>{randomCity}</span>\n              </Link>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoginScreen;\n","import { Offer } from '../../types/offer';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { getRatingStarsWidth } from '../../utils/uttils';\nimport { useDispatch } from 'react-redux';\nimport { changeFavoriteStatus } from '../../store/api-actions';\n\ntype FavoritePlaceCardProps = {\n  offer: Offer,\n}\n\nfunction FavoritePlaceCard({ offer }: FavoritePlaceCardProps): JSX.Element {\n  const dispatch = useDispatch();\n\n  const {\n    previewImage,\n    price,\n    isFavorite,\n    isPremium,\n    rating,\n    title,\n    type,\n    id,\n  } = offer;\n\n  const handleFavoriteClick = () => {\n    dispatch(changeFavoriteStatus(id, !isFavorite));\n  };\n\n  return (\n    <article className=\"favorites__card place-card\">\n      {isPremium &&\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>}\n      <div className=\"favorites__image-wrapper place-card__image-wrapper\">\n        <Link to={`${AppRoute.Main}offer/${id}`}>\n          <img className=\"place-card__image\" src={previewImage} width=\"150\" height=\"110\" alt=\"Place card\" />\n        </Link>\n      </div>\n      <div className=\"favorites__card-info place-card__info\">\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button className={\n            isFavorite\n              ? 'place-card__bookmark-button place-card__bookmark-button--active button'\n              : 'place-card__bookmark-button  button'\n          }\n          type=\"button\"\n          onClick={handleFavoriteClick}\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">In bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: `${getRatingStarsWidth(rating)}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={`${AppRoute.Main}offer/${id}`}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n}\n\nexport default FavoritePlaceCard;\n","import FavoritePlaceCard from '../favorite-place-card/favorite-place-card';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport { changeCity } from '../../store/action';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFavoriteOffers } from '../../store/offer-data/selectors';\n\ntype FavoritesOffersLstProps = {\n  location: string,\n}\n\nfunction FavoritesOffersLst({ location }: FavoritesOffersLstProps): JSX.Element {\n  const favoriteOffers = useSelector(getFavoriteOffers);\n  const dispatch = useDispatch();\n\n  const handleCityClick = () => {\n    dispatch(changeCity(location));\n  };\n\n  return (\n    <li className=\"favorites__locations-items\">\n      <div className=\"favorites__locations locations locations--current\">\n        <div className=\"locations__item\">\n          <Link className=\"locations__item-link\" to={AppRoute.Main} onClick={handleCityClick}>\n            <span>{location}</span>\n          </Link>\n        </div>\n      </div>\n      <div className=\"favorites__places\">\n        {favoriteOffers\n          .filter((offer) => offer.cityName === location && offer.isFavorite)\n          .map((offer) => <FavoritePlaceCard offer={offer} key={offer.id} />)}\n      </div>\n    </li>\n  );\n}\n\nexport default FavoritesOffersLst;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport MainHeader from '../main-header/main-header';\n\nfunction FavoritesScreenEmpty(): JSX.Element {\n  return (\n    <div className=\"page page--favorites-empty\">\n      <MainHeader />\n\n      <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites favorites--empty\">\n            <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n            <div className=\"favorites__status-wrapper\">\n              <b className=\"favorites__status\">Nothing yet saved.</b>\n              <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n            </div>\n          </section>\n        </div>\n      </main>\n      <footer className=\"footer\">\n        <Link className=\"footer__logo-link\" to={AppRoute.Main}>\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n        </Link>\n      </footer>\n    </div>\n  );\n}\n\nexport default FavoritesScreenEmpty;\n","import FavoritesOffersLst from '../favorites-offers-list/favorites-offers-list';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport FavoritesScreenEmpty from '../favorites-screen-empty/favorites-screen-empty';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MainHeader from '../main-header/main-header';\nimport { fetchFavorite } from '../../store/api-actions';\nimport { useEffect } from 'react';\nimport { getFavoriteOffers } from '../../store/offer-data/selectors';\n\nfunction FavoritesScreen(): JSX.Element {\n  const favoriteOffers = useSelector(getFavoriteOffers);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchFavorite());\n  }, [dispatch]);\n\n  const favoriteLocations: Set<string> = new Set();\n  favoriteOffers.forEach((offer) => {\n    if (offer.isFavorite) {\n      favoriteLocations.add(offer.cityName);\n    }\n  });\n\n  if (favoriteLocations.size === 0) {\n    return <FavoritesScreenEmpty />;\n  }\n\n  return (\n    <div className=\"page\">\n      <MainHeader />\n\n      <main className=\"page__main page__main--favorites\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites\">\n            <h1 className=\"favorites__title\">Saved listing</h1>\n            <ul className=\"favorites__list\">\n              {[...favoriteLocations].map((location) => (\n                <FavoritesOffersLst\n                  location={location}\n                  key={location}\n                />))}\n            </ul>\n          </section>\n        </div>\n      </main>\n      <footer className=\"footer container\">\n        <Link className=\"footer__logo-link\" to={AppRoute.Main}>\n          <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n        </Link>\n      </footer>\n    </div>\n  );\n}\n\nexport default FavoritesScreen;\n","import { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport MainHeader from '../main-header/main-header';\n\nfunction MainPage404(): JSX.Element {\n  return (\n    <div className=\"page page--gray page--main\">\n      <MainHeader />\n      <main className=\"page__main page__main--index page__main--index-empty\">\n        <h1 className=\"visually-hidden\">Cities</h1>\n\n        <div className=\"cities\">\n          <div className=\"cities__places-container cities__places-container--empty container\">\n            <section className=\"cities__no-places\">\n              <div className=\"cities__status-wrapper tabs__content\">\n                <b className=\"cities__status\">Error 404. Page is not found :(</b>\n                <p className=\"cities__status-description\">\n                  <Link className=\"cities__status-link\" to={AppRoute.Main}>You can go to the home page.</Link>\n                </p>\n              </div>\n            </section>\n            <div className=\"cities__right-section\"></div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default MainPage404;\n","import './loading-screen.css';\n\nfunction LoadingScreen(): JSX.Element {\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <main className=\"page__main page__main--index page__main--index-empty\">\n        <div className=\"cities\">\n          <div id=\"fountainTextG\">\n            <div id=\"fountainTextG_1\" className=\"fountainTextG\">L</div><div id=\"fountainTextG_2\" className=\"fountainTextG\">o</div><div id=\"fountainTextG_3\" className=\"fountainTextG\">a</div><div id=\"fountainTextG_4\" className=\"fountainTextG\">d</div><div id=\"fountainTextG_5\" className=\"fountainTextG\">i</div><div id=\"fountainTextG_6\" className=\"fountainTextG\">n</div><div id=\"fountainTextG_7\" className=\"fountainTextG\">g</div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default LoadingScreen;\n","import { useSelector } from 'react-redux';\nimport { getNearbyOffers } from '../../store/offer-data/selectors';\nimport OffersList from '../offers-list/offers-list';\n\nfunction PropertyNearPlaces(): JSX.Element {\n  const nearbyOffers = useSelector(getNearbyOffers);\n\n  return (\n    <section className=\"near-places places\">\n      <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n      <div className=\"near-places__list places__list\">\n        <OffersList offers={nearbyOffers} />\n      </div>\n    </section>\n  );\n}\n\nexport default PropertyNearPlaces;\n\n","import { useSelector } from 'react-redux';\nimport { getNearbyOffers, getOffer } from '../../store/offer-data/selectors';\nimport Map from '../map/map';\n\nfunction PropertyMap(): JSX.Element {\n  const nearbyOffers = useSelector(getNearbyOffers);\n  const offer = useSelector(getOffer);\n  return (\n    <section className=\"property__map map\">\n      <Map offers={nearbyOffers} activePlaceCard={null} currentOffer={offer}/>\n    </section>\n  );\n}\n\nexport default PropertyMap;\n\n","import dayjs from 'dayjs';\nimport { Review } from '../../types/review';\nimport { getRatingStarsWidth } from '../../utils/uttils';\n\ntype PlaceCommentProps = {\n  review: Review;\n}\n\nfunction PlaceComment({ review }: PlaceCommentProps): JSX.Element {\n  const {\n    comment,\n    date,\n    rating,\n    userName,\n    userAvatarUrl,\n    userIsPro,\n  } = review;\n\n  return (\n    <li className=\"reviews__item\">\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={userAvatarUrl} alt=\"Reviews avatar\" width=\"54\" height=\"54\" />\n        </div>\n        <span className=\"reviews__user-name\">\n          {userName}\n        </span>\n        {userIsPro && <span className=\"property__user-status\">Pro</span>}\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{ width: `${getRatingStarsWidth(rating)}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {comment}\n        </p>\n        <time className=\"reviews__time\" dateTime={`${date}`}>{dayjs(date).format('MMMM YYYY')}</time>\n      </div>\n    </li>\n  );\n}\n\nexport default PlaceComment;\n","import { MAX_COUNT_COMMENTS, MIN_COUNT_COMMENTS } from '../../const';\nimport { Review } from '../../types/review';\nimport PlaceComment from '../place-comment/place-comment';\n\ntype CommentsListProps = {\n  comments: Review[];\n}\n\nfunction CommentsList({ comments }: CommentsListProps): JSX.Element {\n  return (\n    <>\n      {\n        comments\n          .slice()\n          .sort((prev, next) => new Date(next.date).getTime() - new Date(prev.date).getTime())\n          .slice(MIN_COUNT_COMMENTS, MAX_COUNT_COMMENTS)\n          .map((comment) => (<PlaceComment review={comment} key={comment.id} />))\n      }\n    </>\n  );\n}\n\nexport default CommentsList;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { MAX_COMMENT_CHARACTERS, MIN_COMMENT_CHARACTERS } from '../../const';\nimport { postComment } from '../../store/api-actions';\n\ntype SubmitCommentFormProps = {\n  id: number,\n}\n\nfunction SubmitCommentForm({ id }: SubmitCommentFormProps): JSX.Element {\n  const dispatch = useDispatch();\n  const [commentStarValue, setCommentStarValue] = useState<string>('');\n  const [commentTextValue, setCommentTextValue] = useState<string>('');\n  const [isDisabledSubmitButton, setIsDisabledSubmitButton] = useState<boolean>(true);\n  const [isDisabledFormInputs, setIsDisabledFormInputs] = useState<boolean>(false);\n\n  const handleRatingInputChange = ({ target }: React.ChangeEvent<HTMLInputElement>) => {\n    setCommentStarValue(target.value);\n  };\n\n  const handleCommentChange = ({ target }: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setCommentTextValue(target.value);\n  };\n\n  useEffect(() => {\n    commentTextValue.length >= MIN_COMMENT_CHARACTERS &&\n      commentTextValue.length <= MAX_COMMENT_CHARACTERS &&\n      commentStarValue !== ''\n      ? setIsDisabledSubmitButton(false)\n      : setIsDisabledSubmitButton(true);\n  }, [isDisabledSubmitButton, commentTextValue, commentStarValue]);\n\n  const handleFormDisabled = (isDisabled: boolean) => setIsDisabledFormInputs(isDisabled);\n\n  const handleFormReset  = () => {\n    setCommentTextValue('');\n    setCommentStarValue('');\n  };\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault();\n    const data = { comment: commentTextValue, rating: commentStarValue };\n    dispatch(postComment(id, data, handleFormDisabled, handleFormReset));\n    handleFormDisabled(true);\n  };\n\n\n  return (\n    <form\n      className=\"reviews__form form\"\n      action=\"#\"\n      method=\"post\"\n      onSubmit={handleSubmit}\n    >\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <div className=\"reviews__rating-form form__rating\">\n        <input\n          className=\"form__rating-input visually-hidden\"\n          value=\"5\"\n          id=\"5-stars\"\n          type=\"radio\"\n          name=\"rating\"\n          onChange={handleRatingInputChange}\n          disabled={isDisabledFormInputs}\n          checked={!!commentStarValue}\n        />\n        <label htmlFor=\"5-stars\" className=\"reviews__rating-label form__rating-label\" title=\"perfect\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          value=\"4\"\n          id=\"4-stars\"\n          type=\"radio\"\n          name=\"rating\"\n          onChange={handleRatingInputChange}\n          disabled={isDisabledFormInputs}\n          checked={!!commentStarValue}\n        />\n        <label htmlFor=\"4-stars\" className=\"reviews__rating-label form__rating-label\" title=\"good\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          value=\"3\"\n          id=\"3-stars\"\n          type=\"radio\"\n          name=\"rating\"\n          onChange={handleRatingInputChange}\n          disabled={isDisabledFormInputs}\n          checked={!!commentStarValue}\n        />\n        <label htmlFor=\"3-stars\" className=\"reviews__rating-label form__rating-label\" title=\"not bad\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          value=\"2\"\n          id=\"2-stars\"\n          type=\"radio\"\n          name=\"rating\"\n          onChange={handleRatingInputChange}\n          disabled={isDisabledFormInputs}\n          checked={!!commentStarValue}\n        />\n        <label htmlFor=\"2-stars\" className=\"reviews__rating-label form__rating-label\" title=\"badly\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n\n        <input\n          className=\"form__rating-input visually-hidden\"\n          value=\"1\"\n          id=\"1-star\"\n          type=\"radio\"\n          name=\"rating\"\n          onChange={handleRatingInputChange}\n          disabled={isDisabledFormInputs}\n          checked={!!commentStarValue}\n        />\n        <label htmlFor=\"1-star\" className=\"reviews__rating-label form__rating-label\" title=\"terribly\">\n          <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n            <use xlinkHref=\"#icon-star\"></use>\n          </svg>\n        </label>\n      </div>\n      <textarea\n        className=\"reviews__textarea form__textarea\"\n        id=\"review\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        name=\"review\"\n        value={commentTextValue}\n        onChange={handleCommentChange}\n        disabled={isDisabledFormInputs}\n      >\n      </textarea>\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          To submit review please make sure to set <span className=\"reviews__star\">rating</span> and describe your stay with at least <b className=\"reviews__text-amount\">{MIN_COMMENT_CHARACTERS} characters</b>.\n        </p>\n\n        <button\n          className=\"reviews__submit form__submit button\"\n          type=\"submit\"\n          disabled={isDisabledSubmitButton}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SubmitCommentForm;\n","import { useSelector } from 'react-redux';\nimport { AuthorizationStatus } from '../../const';\nimport { getComments} from '../../store/offer-data/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport CommentsList from '../comments-list/comments-list';\nimport SubmitCommentForm from '../submit-comment-form/submit-comment-form';\ntype PropertyReviewsProps = {\n  id: number,\n}\n\nfunction PropertyReviews({ id }: PropertyReviewsProps): JSX.Element {\n  const comments = useSelector(getComments);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <section className=\"property__reviews reviews\">\n      <h2 className=\"reviews__title\">Reviews · <span className=\"reviews__amount\">{comments.length}</span></h2>\n      <ul className=\"reviews__list\">\n        <CommentsList comments={comments} />\n      </ul>\n      {authorizationStatus === AuthorizationStatus.Auth &&\n        <SubmitCommentForm\n          id={id}\n        />}\n    </section>\n  );\n}\n\nexport default PropertyReviews;\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus, MAX_COUNT_OFFER_IMAGES, MIN_COUNT_OFFER_IMAGES, offerTypeToReadable } from '../../const';\nimport { redirectToRoute } from '../../store/action';\nimport { changeFavoriteStatus } from '../../store/api-actions';\nimport { getOffer } from '../../store/offer-data/selectors';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport { getRatingStarsWidth } from '../../utils/uttils';\nimport MainPage404 from '../main-page-404/main-page-404';\nimport PropertyMap from '../property-map/property-map';\nimport PropertyReviews from '../property-reviews/property-reviews';\n\nfunction PropertyOffer(): JSX.Element {\n  const dispatch = useDispatch();\n  const offer = useSelector(getOffer);\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  if (!offer) {\n    return (\n      <MainPage404 />\n    );\n  }\n\n  const {\n    images,\n    isPremium,\n    bedrooms,\n    maxAdults,\n    price,\n    isFavorite,\n    rating,\n    title,\n    type,\n    goods,\n    hostName,\n    hostIsPro,\n    description,\n    id,\n  } = offer;\n\n  const handleFavoriteClick = () => {\n    if (authorizationStatus === AuthorizationStatus.NoAuth) {\n      dispatch(redirectToRoute(AppRoute.Login));\n    }\n    dispatch(changeFavoriteStatus(id, !isFavorite));\n  };\n\n  return (\n    <section className=\"property\">\n      <div className=\"property__gallery-container container\">\n        <div className=\"property__gallery\">\n          {images.slice(MIN_COUNT_OFFER_IMAGES, MAX_COUNT_OFFER_IMAGES).map((image: string) => (\n            <div className=\"property__image-wrapper\" key={image}>\n              <img className=\"property__image\" src={`${image}`} alt=\"Room\" />\n            </div>),\n          )}\n        </div>\n      </div>\n      <div className=\"property__container container\">\n        <div className=\"property__wrapper\">\n          {isPremium &&\n            <div className=\"property__mark\">\n              <span>Premium</span>\n            </div>}\n          <div className=\"property__name-wrapper\">\n            <h1 className=\"property__name\">\n              {title}\n            </h1>\n            <button\n              className={\n                isFavorite && authorizationStatus === AuthorizationStatus.Auth\n                  ? 'property__bookmark-button property__bookmark-button--active button'\n                  : 'property__bookmark-button  button'\n              }\n              type=\"button\"\n              onClick={handleFavoriteClick}\n            >\n              <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n                <use xlinkHref=\"#icon-bookmark\"></use>\n              </svg>\n              <span className=\"visually-hidden\">To bookmarks</span>\n            </button>\n          </div>\n          <div className=\"property__rating rating\">\n            <div className=\"property__stars rating__stars\">\n              <span style={{ width: `${getRatingStarsWidth(rating)}%` }}></span>\n              <span className=\"visually-hidden\">Rating</span>\n            </div>\n            <span className=\"property__rating-value rating__value\">{rating}</span>\n          </div>\n          <ul className=\"property__features\">\n            <li className=\"property__feature property__feature--entire\">\n              {offerTypeToReadable[type]}\n            </li>\n            <li className=\"property__feature property__feature--bedrooms\">\n              {bedrooms} Bedrooms\n            </li>\n            <li className=\"property__feature property__feature--adults\">\n              Max {maxAdults} adults\n            </li>\n          </ul>\n          <div className=\"property__price\">\n            <b className=\"property__price-value\">€{price}</b>\n            <span className=\"property__price-text\">&nbsp;night</span>\n          </div>\n          <div className=\"property__inside\">\n            <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n            <ul className=\"property__inside-list\">\n              {goods.map((good) => (\n                <li className=\"property__inside-item\" key={good}>\n                  {good}\n                </li>))};\n            </ul>\n          </div>\n          <div className=\"property__host\">\n            <h2 className=\"property__host-title\">Meet the host</h2>\n            <div className=\"property__host-user user\">\n              <div className=\"property__avatar-wrapper property__avatar-wrapper--pro user__avatar-wrapper\">\n                <img className=\"property__avatar user__avatar\" src=\"img/avatar-angelina.jpg\" alt=\"Host avatar\" width=\"74\" height=\"74\" />\n              </div>\n              <span className=\"property__user-name\">\n                {hostName}\n              </span>\n\n              {hostIsPro &&\n                <span className=\"property__user-status\">\n                  Pro\n                </span>}\n\n            </div>\n            <div className=\"property__description\">\n              <p className=\"property__text\">\n                {description}\n              </p>\n            </div>\n          </div>\n          <PropertyReviews id={id}/>\n        </div>\n      </div>\n      <PropertyMap/>\n    </section>\n  );\n}\n\nexport default PropertyOffer;\n\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchComments, fetchNearbyOffers, fetchOfferByIdAction } from '../../store/api-actions';\nimport MainHeader from '../main-header/main-header';\nimport PropertyNearPlaces from '../property-near-places/property-near-places';\nimport PropertyOffer from '../property-offer/property-offer';\ntype RouteParams = {\n  id: string\n}\n\nfunction PropertyScreen(): JSX.Element {\n  const { id } = useParams<RouteParams>();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchOfferByIdAction(+id));\n    dispatch(fetchNearbyOffers(+id));\n    dispatch(fetchComments(+id));\n  }, [id, dispatch]);\n\n  return (\n    <div className=\"page\">\n      <MainHeader />\n      <main className=\"page__main page__main--property\">\n        <PropertyOffer/>\n        <div className=\"container\">\n          <PropertyNearPlaces/>\n        </div>\n      </main>\n    </div>\n  );\n\n}\n\nexport default PropertyScreen;\n\n","import { Switch, Route} from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport PrivateRoute from '../private-route/private-route';\nimport MainPage from '../main-page/main-page';\nimport LoginScreen from '../login-screen/login-screen';\nimport FavoritesScreen from '../favorites-screen/favorites-screen';\nimport MainPage404 from '../main-page-404/main-page-404';\nimport { useSelector } from 'react-redux';\nimport LoadingScreen from '../loading-screen/loading-screen';\nimport { isCheckedAuth } from '../../utils/uttils';\nimport PropertyScreen from '../property-screen/property-screen';\nimport { getAuthorizationStatus } from '../../store/user-process/selectors';\nimport { getLoadedDataStatus } from '../../store/offer-data/selectors';\n\nfunction App(): JSX.Element {\n\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const isDataLoaded = useSelector(getLoadedDataStatus);\n\n  if (isCheckedAuth(authorizationStatus) || !isDataLoaded) {\n    return (\n      <LoadingScreen />\n    );\n  }\n\n  return (\n    <Switch>\n      <Route path={AppRoute.Main} exact>\n        <MainPage />\n      </Route>\n      <Route path={AppRoute.Login} exact>\n        <LoginScreen />\n      </Route>\n      <PrivateRoute\n        exact\n        path={AppRoute.Favorites}\n        render={() => <FavoritesScreen />}\n      >\n      </PrivateRoute>\n      <Route path={AppRoute.Offer} exact>\n        <PropertyScreen />\n      </Route>\n      <Route\n        render={() => (\n          <MainPage404 />\n        )}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","import axios, { AxiosError, AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { getToken } from './token';\n\nconst BACKEND_URL = 'https://8.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nenum HttpCode {\n  Unauthorized = 401,\n}\n\ntype UnauthorizedCallback = () => void;\n\nconst createAPI = (onUnauthorized: UnauthorizedCallback): AxiosInstance => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n  });\n\n  api.interceptors.response.use(\n    (response: AxiosResponse) => response,\n\n    (error: AxiosError) => {\n      const {response} = error;\n\n      if (response?.status === HttpCode.Unauthorized) {\n        onUnauthorized();\n      }\n\n      return Promise.reject(error);\n    },\n  );\n\n  api.interceptors.request.use(\n    (config: AxiosRequestConfig) => {\n      const token = getToken();\n\n      if (token) {\n        config.headers['x-token'] = token;\n      }\n\n      return config;\n    },\n  );\n\n  return api;\n};\n\nexport { createAPI };\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport { Middleware } from 'redux';\nimport { ActionType } from '../../types/action';\nimport { rootReducer } from '../root-reducer';\n\ntype Reducer = ReturnType<typeof rootReducer>;\n\nconst redirect: Middleware<unknown, Reducer> =\n  (_store) =>\n    (next) =>\n      (action) => {\n\n        if (action.type === ActionType.RedirectToRoute) {\n          browserHistory.push(action.payload);\n        }\n\n        return next(action);\n      };\n\nexport { redirect };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { createAPI } from './services/api';\nimport { checkAuthAction, fetchOffersAction } from './store/api-actions';\nimport { requireAuthorization } from './store/action';\nimport { AuthorizationStatus } from './const';\nimport { redirect } from './store/middleware/redirect';\nimport { rootReducer } from './store/root-reducer';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Router as BrowserRouter } from 'react-router-dom';\nimport browserHistory from './browser-history';\n\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NoAuth)),\n);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\n(store.dispatch)(checkAuthAction());\n(store.dispatch)(fetchOffersAction());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={browserHistory}>\n        <ToastContainer />\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode >,\n  document.getElementById('root'));\n"],"sourceRoot":""}